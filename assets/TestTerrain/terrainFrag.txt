#version 420
#extension GL_ARB_separate_shader_objects : enable

layout(location = 0) in DataIn
{
	vec2 TexCoords;
	float Height;
};
layout(location = 0) out vec4 outColor;

layout (std140, binding = 1) uniform TerrainAdapter
{
	vec3 GridOrigin;
	float TileSize;
	int GridWidth;
	int GridHeight;
	float YScale;
	vec4 ColorsAndHeightLevels[5];
};

float getCompMax(vec4 v)
{
	return max(v.x, max(v.y, max(v.z, v.w)));
}

void main() 
{
	outColor = vec4(ColorsAndHeightLevels[4].rgb, 1);
	for(int i=1; i<5; i++)
	{
		const float levelRight = ColorsAndHeightLevels[i].a;
		if(Height < levelRight)
		{
			const float levelLeft = ColorsAndHeightLevels[i-1].a;
			const vec3 colorLeft = ColorsAndHeightLevels[i-1].rgb;
			const vec3 colorRight = ColorsAndHeightLevels[i].rgb;

			const float t = (Height - levelLeft)/(levelRight - levelLeft);
			outColor = vec4(mix(colorLeft, colorRight, t), 1);
			break;
		}
	}
}