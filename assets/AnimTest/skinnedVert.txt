#version 420
#include "Engine/Adapters/SkeletonAdapter.txt"
#include "Engine/Adapters/ObjectMatricesAdapter.txt"

layout(location = 0) in vec3 position;
layout(location = 1) in vec3 normal;
layout(location = 2) in vec2 uvs;
layout(location = 3) in ivec4 boneIndices;
layout(location = 4) in vec4 boneWeights;

out vec3 fragPosOut;
out vec3 normalOut;
out vec2 uvsOut;

layout (std140, binding = 0) uniform ObjectMatricesAdapter;
layout (std140, binding = 3) uniform SkeletonAdapter;

#include "Engine/Adapters/SkeletonAdapter-funcs.txt"

void main() 
{
	mat4 skinningMat = GetBoneSkinningMat(boneIndices, boneWeights);
    gl_Position = MVP * skinningMat * vec4(position, 1);
    fragPosOut = (Model * skinningMat * vec4(position, 1)).xyz;
	normalOut = (Model * skinningMat * vec4(normal, 0)).xyz;
    uvsOut = uvs;
}