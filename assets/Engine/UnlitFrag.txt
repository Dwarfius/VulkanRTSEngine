#version 420

in vec3 fragPosOut;
in vec3 normalOut;
in vec2 uvsOut;

uniform sampler2D tex;

layout(location = 0) out vec4 outColor;

layout (std140, binding = 1) uniform CameraAdapter
{
    mat4 CamViewProj;
    mat4 CamView;
    mat4 CamProj;
    vec4 FrustumPlane[6]; // left, right, down, up, far, near
    vec4 CamPos;
    vec2 Viewport;
};

void main() 
{
    const vec3 normal = normalize(normalOut);
    const vec3 viewDir = normalize(CamPos.xyz - fragPosOut);
    outColor = vec4(texture(tex, uvsOut).xyz, 1.0);
}