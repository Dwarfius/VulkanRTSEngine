#version 420

in vec2 uvsOut;

uniform sampler2D paintTexture;

layout(location = 0) out vec4 outColor;

layout (std140, binding = 0) uniform PainterAdapter
{
    mat4 MVP;
    vec4 Color;
    vec2 CanvasSize;
    vec2 TexSize;
    vec2 MousePosStart;
    vec2 MousePosEnd;
    vec2 GridCellSize;
    vec2 TextureSize;
    int DrawingMode;
    int BrushSize;
};

bool IsGridPixel()
{
    vec2 coordsWS = uvsOut * TexSize;
    float scaleFactor = min(TexSize.x / CanvasSize.x, 1);
    float scaledPixel = 1.f / scaleFactor;
    return mod(coordsWS.x, GridCellSize.x) < scaledPixel
        || mod(coordsWS.y, GridCellSize.y) < scaledPixel;
}

vec4 ApplyGridColor(bool aIsGrid, vec4 aBaseColor)
{
    vec4 gridColor = vec4(0.5f);
    if(aIsGrid)
    {
        float factor = 1.f - gridColor.w;
        return aBaseColor * factor + gridColor * gridColor.w;
    }
    else
    {
        return aBaseColor;
    }
}

void main() 
{
    bool isGrid = IsGridPixel();
    vec4 baseColor = texture(paintTexture, uvsOut);
    outColor = ApplyGridColor(isGrid, baseColor);
}