#version 420

in vec2 uvsOut;

uniform sampler2D prevFrame;

layout(location = 0) out vec4 finalColor;
layout(location = 1) out vec4 outColor;

layout (std140, binding = 0) uniform PainterAdapter
{
    mat4 MVP;
    vec3 Color;
    vec2 CanvasSize;
    vec2 TexSize;
    vec2 MousePos;
    vec2 GridCellSize;
    int IsDrawing;
    float BrushSize;
};

bool IsNearMouse()
{
    vec2 mouseRel = MousePos / TexSize;
    mouseRel.x = clamp(mouseRel.x, 0, 1);
    mouseRel.y = clamp(mouseRel.y, 0, 1);
    float dist = distance(uvsOut, mouseRel);
    return dist < BrushSize;
}

vec4 ApplyPaintColor(bool aIsInside, vec4 aBaseColor)
{
    if(IsDrawing > 0)
    {
        return aIsInside ? 
            (IsDrawing == 1 ? vec4(Color, 1) : vec4(0)) : aBaseColor;
    }
    else if(IsDrawing == -1)
    {
        return vec4(0);
    }
    else
    {
        return aBaseColor;
    }
}

vec4 GetMousePointerColor(bool aIsInside, vec4 aBaseColor)
{
    return aIsInside ? vec4(Color, 1) : aBaseColor;
}

void main() 
{
    bool isInside = IsNearMouse();
    vec4 baseColor = texture(prevFrame, uvsOut);
    outColor = ApplyPaintColor(isInside, baseColor);

    finalColor = GetMousePointerColor(isInside, outColor);
}