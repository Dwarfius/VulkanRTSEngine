#version 420

in vec3 normalOut;
in vec2 uvsOut;

uniform sampler2D tex;

layout(location = 0) out vec4 outColor;
layout(location = 1) out vec4 finalColor;

layout (std140, binding = 0) uniform PainterAdapter
{
    vec2 TexSize;
    vec2 MousePos;
    int IsDrawing;
    float BrushSize;
};

void main() 
{
    vec2 mouseRel = MousePos / TexSize;
    mouseRel.x = clamp(mouseRel.x, 0, 1);
    mouseRel.y = clamp(mouseRel.y, 0, 1);
    float dist = distance(uvsOut, mouseRel);
    bool isInside = dist < BrushSize;

    vec4 paintColor;
    if(IsDrawing > 0)
    {
        // color pixel under mouse white, otherwise black
        paintColor = isInside ? 
            (IsDrawing == 1 ? vec4(1, 1, 1, 1) : -vec4(1, 1, 1, 0)) : 
            vec4(0, 0, 0, 1);
    }
    else if(IsDrawing == -1)
    {
        paintColor = -vec4(1, 1, 1, 0);
    }
    else
    {
        paintColor = vec4(0, 0, 0, 1);
    }

    // mix it with prev frame
    vec4 baseColor = texture(tex, uvsOut);
    outColor = baseColor + paintColor;

    finalColor = isInside ? vec4(0, 0, 1, 1) : outColor;
}